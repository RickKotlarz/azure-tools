// List virtual machines with Public IP Addresses and Network Security Groups

Resources
| where type =~ 'microsoft.compute/virtualmachines'
| extend powerState = tostring(properties.extended.instanceView.powerState.displayStatus)
| extend nics=array_length(properties.networkProfile.networkInterfaces)
| mv-expand nic=properties.networkProfile.networkInterfaces
| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)
| project subscriptionId, resourceGroup, vmId = id, vmName = name, powerState, nicId = tostring(nic.id)
| join kind=leftouter (
  Resources
  | where type =~ 'microsoft.network/networkinterfaces'
  | extend ipConfigsCount=array_length(properties.ipConfigurations)
  | mv-expand ipconfig=properties.ipConfigurations
  | where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true'
  | extend subnetId = tostring(ipconfig.properties.subnet.id)
  | project nicId = id, publicIpId = tostring(ipconfig.properties.publicIPAddress.id), subnetId
  | join kind=leftouter (
    Resources 
    | where type =~ "microsoft.network/virtualnetworks" 
    | mv-expand subnet = properties.subnets
    | where array_length(subnet.properties.ipConfigurations) > 0
    | project vnetId = id, vnetName = name, vnetNameSubscriptionId = subscriptionId, vnetResourceGroup = resourceGroup, subnetName = tostring(subnet.name),
    subnetipConfigurations = subnet.properties.ipConfigurations, subnetnetworkSecurityGroup = tostring(subnet.properties.networkSecurityGroup.id),
    subnetAddressPrefix = tostring(subnet.properties.addressPrefix), subnetId = tostring(subnet.id)
    ) on subnetId
  ) on nicId
| project-away nicId1
| summarize by vmId, vmName, powerState, nicId, publicIpId, subscriptionId, resourceGroup, vnetName, subnetName, subnetId, subnetnetworkSecurityGroup
| join kind=leftouter (
  Resources
  | where type =~ 'microsoft.network/publicipaddresses'
  | extend tier = sku.tier
  | extend sku = sku.name
  | project publicIpId = id, publicIpAddress = properties.ipAddress, sku, tier) on publicIpId
| project-away publicIpId1
| join kind=leftouter (
    Resources
    | where type =~ 'microsoft.network/networksecuritygroups'
    | mvexpand associatedNic = properties.networkInterfaces
    | extend associatedNic = tostring(associatedNic.id)
    | project nsgId = id, nsgName = name, associatedNic) on $left.nicId == $right.associatedNic
| where isnotempty(nsgId) and isnotempty(publicIpAddress) and isnotempty(subnetnetworkSecurityGroup)
| project-away associatedNic
